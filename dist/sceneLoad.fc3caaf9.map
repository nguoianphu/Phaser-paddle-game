{"version":3,"sources":["js/scenes/sceneLoad.js"],"names":["SceneLoad","bar","Bar","scene","x","game","config","width","y","height","progText","add","text","color","fontSize","setOrigin","load","on","onProgress","image","spritesheet","frameWidth","frameHeight","audio","value","console","log","setPercent","per","Math","floor","setText","start","Phaser","Scene"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAAMA;;;;;AACJ,uBAAc;AAAA;;AAAA,kFACN,WADM;AAEb;;;;8BACS;AACR,WAAKC,GAAL,GAAW,IAAIC,GAAJ,CAAQ;AACjBC,QAAAA,KAAK,EAAE,IADU;AAEjBC,QAAAA,CAAC,EAAEC,IAAI,CAACC,MAAL,CAAYC,KAAZ,GAAoB,CAFN;AAGjBC,QAAAA,CAAC,EAAEH,IAAI,CAACC,MAAL,CAAYG,MAAZ,GAAqB;AAHP,OAAR,CAAX;AAKA,WAAKC,QAAL,GAAgB,KAAKC,GAAL,CAASC,IAAT,CACdP,IAAI,CAACC,MAAL,CAAYC,KAAZ,GAAoB,CADN,EAEdF,IAAI,CAACC,MAAL,CAAYG,MAAZ,GAAqB,CAFP,EAGd,IAHc,EAId;AAAEI,QAAAA,KAAK,EAAE,SAAT;AAAoBC,QAAAA,QAAQ,EAAET,IAAI,CAACC,MAAL,CAAYC,KAAZ,GAAoB;AAAlD,OAJc,CAAhB;AAMA,WAAKG,QAAL,CAAcK,SAAd,CAAwB,GAAxB,EAA6B,GAA7B;AACA,WAAKC,IAAL,CAAUC,EAAV,CAAa,UAAb,EAAyB,KAAKC,UAA9B,EAA0C,IAA1C,EAbQ,CAeR;;AACA,WAAKF,IAAL,CAAUG,KAAV,CAAgB,SAAhB,EAA2B,2BAA3B;AACA,WAAKH,IAAL,CAAUG,KAAV,CAAgB,SAAhB,EAA2B,2BAA3B,EAjBQ,CAmBR;AACA;;AAEA,WAAKH,IAAL,CAAUG,KAAV,CAAgB,YAAhB,EAA8B,yBAA9B;AACA,WAAKH,IAAL,CAAUG,KAAV,CAAgB,QAAhB,EAA0B,6BAA1B;AACA,WAAKH,IAAL,CAAUG,KAAV,CAAgB,OAAhB,EAAyB,4BAAzB;AACA,WAAKH,IAAL,CAAUG,KAAV,CAAgB,SAAhB,EAA2B,8BAA3B;AACA,WAAKH,IAAL,CAAUG,KAAV,CAAgB,UAAhB,EAA4B,+BAA5B,EA1BQ,CA4BR;;AACA,WAAKH,IAAL,CAAUI,WAAV,CAAsB,OAAtB,EAA+B,kBAA/B,EAAmD;AACjDC,QAAAA,UAAU,EAAE,GADqC;AAEjDC,QAAAA,WAAW,EAAE;AAFoC,OAAnD;AAIA,WAAKN,IAAL,CAAUI,WAAV,CAAsB,SAAtB,EAAiC,oBAAjC,EAAuD;AACrDC,QAAAA,UAAU,EAAE,GADyC;AAErDC,QAAAA,WAAW,EAAE;AAFwC,OAAvD;AAIA,WAAKN,IAAL,CAAUG,KAAV,CAAgB,KAAhB,EAAuB,gBAAvB;AAEA,WAAKH,IAAL,CAAUO,KAAV,CAAgB,MAAhB,EAAwB,CAAC,gBAAD,EAAmB,gBAAnB,CAAxB;AACA,WAAKP,IAAL,CAAUO,KAAV,CAAgB,MAAhB,EAAwB,CAAC,gBAAD,EAAmB,gBAAnB,CAAxB;AACA,WAAKP,IAAL,CAAUO,KAAV,CAAgB,KAAhB,EAAuB,CAAC,eAAD,EAAkB,eAAlB,CAAvB;AACD;;;+BAEUC,OAAO;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,WAAKvB,GAAL,CAAS0B,UAAT,CAAoBH,KAApB;AACA,UAAII,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWN,KAAK,GAAG,GAAnB,CAAV;AACA,WAAKd,QAAL,CAAcqB,OAAd,CAAsBH,GAAG,GAAG,GAA5B;AACD;;;6BAEQ;AACP,WAAKzB,KAAL,CAAW6B,KAAX,CAAiB,YAAjB;AACD;;;;EAzDqBC,MAAM,CAACC","file":"sceneLoad.fc3caaf9.map","sourceRoot":"..","sourcesContent":["class SceneLoad extends Phaser.Scene {\r\n  constructor() {\r\n    super(\"SceneLoad\");\r\n  }\r\n  preload() {\r\n    this.bar = new Bar({\r\n      scene: this,\r\n      x: game.config.width / 2,\r\n      y: game.config.height / 2\r\n    });\r\n    this.progText = this.add.text(\r\n      game.config.width / 2,\r\n      game.config.height / 2,\r\n      \"0%\",\r\n      { color: \"#ffffff\", fontSize: game.config.width / 20 }\r\n    );\r\n    this.progText.setOrigin(0.5, 0.5);\r\n    this.load.on(\"progress\", this.onProgress, this);\r\n\r\n    //load our images or sounds\r\n    this.load.image(\"button1\", \"images/ui/buttons/2/1.png\");\r\n    this.load.image(\"button2\", \"images/ui/buttons/2/5.png\");\r\n\r\n    // this.load.audio('cat', [\"audio/meow.mp3\", \"audio/meow.ogg\"]);\r\n    // this.load.audio('backgroundMusic', [\"audio/random-race.mp3\", \"audio/random-race.ogg\"]);\r\n\r\n    this.load.image(\"toggleBack\", \"images/ui/toggles/3.png\");\r\n    this.load.image(\"sfxOff\", \"images/ui/icons/sfx_off.png\");\r\n    this.load.image(\"sfxOn\", \"images/ui/icons/sfx_on.png\");\r\n    this.load.image(\"musicOn\", \"images/ui/icons/music_on.png\");\r\n    this.load.image(\"musicOff\", \"images/ui/icons/music_off.png\");\r\n\r\n    //load our images or sounds\r\n    this.load.spritesheet(\"balls\", \"images/balls.png\", {\r\n      frameWidth: 100,\r\n      frameHeight: 100\r\n    });\r\n    this.load.spritesheet(\"paddles\", \"images/paddles.png\", {\r\n      frameWidth: 400,\r\n      frameHeight: 50\r\n    });\r\n    this.load.image(\"bar\", \"images/bar.jpg\");\r\n\r\n    this.load.audio(\"lose\", ['audio/lose.wav', 'audio/lose.ogg']);\r\n    this.load.audio(\"flip\", ['audio/flip.wav', 'audio/flip.ogg']);\r\n    this.load.audio(\"hit\", ['audio/hit.wav', 'audio/hit.ogg']);\r\n  }\r\n\r\n  onProgress(value) {\r\n    console.log(value);\r\n    this.bar.setPercent(value);\r\n    let per = Math.floor(value * 100);\r\n    this.progText.setText(per + \"%\");\r\n  }\r\n\r\n  create() {\r\n    this.scene.start(\"SceneTitle\");\r\n  }\r\n}\r\n"]}